Frontend-

FROM node:20-alpine AS build

WORKDIR /app

COPY Frontend/package*.json ./

RUN npm install

COPY Frontend/ .

RUN npm run build

FROM nginx:alpine

COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]


Backend-

FROM node:20-alpine

WORKDIR /app

COPY Backend/package*.json ./

RUN npm install

COPY Backend/ .

EXPOSE 4002

ENV NODE_ENV=production

CMD ["npm", "start"]

docker-compose-

version: '3'
services:
  backend:
    build:
      context: .
      dockerfile: Backend/Dockerfile
    env_file:
      - Backend/.env
    ports:
      - "4002:4002"
    networks:
      - chat-app-network

  frontend:
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    ports:
      - "3001:80"
    networks:
      - chat-app-network

networks:
  chat-app-network:
    driver: bridge

CMD-

docker build -t marckostar7321/chat-app-frontend:v1 -f Fackend/Dockerfile .  
                   
docker build -t marckostar7321/chat-app-backend:v1 -f Backend/Dockerfile . 
                    
docker push marckostar7321/chat-app-backend:v1    
docker push marckostar7321/chat-app-fackend:v1
docker-compose up --build    
docker-compose down
 docker run -p 3001:80 marckostar7321/chat-app-frontend:v1

 docker run --env-file ./Backend/.env -p 4002:4002 marckostar7321/chat-app-backend:v1

kubectl create secret generic backend-env --from-literal=MONGODB_URI="mongodb+srv://0" --from-literal=JWT_TOKEN= --from-literal=PORT=4002
